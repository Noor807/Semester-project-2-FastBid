import{o as m}from"./logout-Bp4xtVrQ.js";import{b as u,A as g}from"./constants-D-ym1ySC.js";import{t as i}from"./toastMsg-pxLBbmNp.js";async function f(t,o){try{const e={"Content-Type":"application/json",Authorization:`Bearer ${o}`,"X-Noroff-API-Key":u},r=await fetch(g,{method:"POST",headers:e,body:JSON.stringify(t)});if(!r.ok){const s=await r.json();throw new Error(s.message||"Failed to create list.")}return await r.json()}catch(e){throw console.error("Error creating list:",e),e}}async function h(t){t.preventDefault();const o=t.target.endsAt.value.trim(),e=t.target.title.value.trim(),r=t.target.description.value.trim(),n=t.target.mediaUrl.value.trim(),s=t.target.mediaAlt.value.trim(),c=t.target.tags.value?t.target.tags.value.split(",").map(a=>a.trim()):[];if(!e||!r){alert("Title and body are required.");return}const l=localStorage.getItem("token"),d={title:e,description:r,tags:c,media:n?[{url:n,alt:s}]:null,endsAt:o};try{const a=await f(d,l);window.location.href=`/post/index.html?singleList=${a.data.id} `,i("list created successfully!","success")}catch(a){console.error("Error:",a),i("Failed to create list: "+a.message)}}const p=document.getElementById("new-list-form");p.addEventListener("submit",h);document.getElementById("logout-Btn").addEventListener("click",m);const y=document.getElementById("hamburger-btn"),v=document.getElementById("navbar-links");y.addEventListener("click",()=>{v.classList.toggle("hidden")});
