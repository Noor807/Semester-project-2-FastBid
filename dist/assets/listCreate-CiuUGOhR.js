import{o as m}from"./logout-Bp4xtVrQ.js";import{A as u}from"./constants-D-ym1ySC.js";import{p as g}from"./authUtils-Bs7pnOI2.js";import{t as i}from"./toastMsg-pxLBbmNp.js";async function p(t){if(!t||typeof t!="object")throw new Error("Invalid form data provided.");const o=u,a=g();try{const e=await fetch(o,{method:"POST",headers:a,body:JSON.stringify(t)});if(!e.ok){const s=await e.json();throw new Error(s.message||"Failed to create auction listing.")}return await e.json()}catch(e){throw console.error("Error creating auction listing:",e),new Error(`Failed to create auction listing: ${e.message}`)}}async function f(t){t.preventDefault();const o=t.target.endsAt.value.trim(),a=t.target.title.value.trim(),e=t.target.description.value.trim(),n=t.target.mediaUrl.value.trim(),s=t.target.mediaAlt.value.trim(),c=t.target.tags.value?t.target.tags.value.split(",").map(r=>r.trim()):[];if(!a||!e){alert("Title and body are required.");return}const l=localStorage.getItem("token"),d={title:a,description:e,tags:c,media:n?[{url:n,alt:s}]:null,endsAt:o};try{const r=await p(d,l);window.location.href=`/post/index.html?singleList=${r.data.id} `,i("list created successfully!","success")}catch(r){console.error("Error:",r),i("Failed to create list: "+r.message)}}const h=document.getElementById("new-list-form");h.addEventListener("submit",f);document.getElementById("logout-Btn").addEventListener("click",m);const v=document.getElementById("hamburger-btn"),w=document.getElementById("navbar-links");v.addEventListener("click",()=>{w.classList.toggle("hidden")});
